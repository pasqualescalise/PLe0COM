VAR base, exponent;

PROCEDURE func1(int x, int y);
	VAR result;

	PROCEDURE square(int x);
		VAR ressquare;
		BEGIN
			ressquare := x * x;
			print ressquare
			{XXX: this fails like it would in C but maybe it doesn't have to}
			{CALL powerWithFors(2, 2)}
		END;

	PROCEDURE powerWithFors(int x, int y);
		VAR respow;

		PROCEDURE func2(int x, int y);
			VAR respow, i;
			BEGIN
				respow := 1;
				for i := 0; i < y; i := i + 1 DO BEGIN
					respow := respow * x
				END;
				print respow
			END;

		BEGIN
			CALL func2(x, y);
			CALL square(x)
		END;

	BEGIN
		CALL square(x);
		CALL square(y);
		CALL powerWithFors(x, y);
		CALL powerWithFors(y, x)
	END;

BEGIN
	base := 3;
	exponent := 4;
	CALL func1(base, exponent)
END.
